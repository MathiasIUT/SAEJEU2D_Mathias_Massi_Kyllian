package universite_paris8.iut.mcontay.saejeu2d.modele;

import universite_paris8.iut.mcontay.saejeu2d.controleur.Controleur;

public class Terrain {
    private int[][] codesTuiles = {
            {06,06,06,06,06,06,06,06,06,06,06,06,06,06,06,06,06,06,06,06,06,06,03,03,03,03,03,03,06,06,06,06,06,06,06,06,06,06,06,06,06,06,06,06,06,06,06,06},
            {06,06,06,06,06,06,06,06,06,06,06,07,07,06,06,06,06,06,06,06,06,06,06,03,03,03,03,03,06,06, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,06},
            {06,06,06,06,06,06,06,06,06,06,06,07,07,06,06,06,06,06,06,06,06,06,06,03,03,03,03,03,06,06, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,06},
            {06,07,07,07,07,07,07,07,07,07,07,07,07,06,06,06,06,06,06,06,06,06,03,03,03,03,03,03,06,06, 9, 9, 9, 9, 9,07,07,07,07,07,07, 9, 9, 9, 9, 9, 9,06},
            {06,07,07,07,07,07,07,07,07,07,07,07,07,06,06,06,06,06,06,06,06,06,03,03,03,03,03,06,06,06, 9, 9, 9, 9, 9,07,07,07,07,07,07, 9, 9, 9, 9, 9, 9,06},
            {06,06,06,06,06,06,06,06,06,06,06,07,07,06,06,06,06,06,06,06,06,06,03,03,03,03,03,06,06,06, 9, 9, 9, 9, 9,07,07, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,06},
            {06,06,06,05,05,05,05,06,06,06,06,07,07,06,06,06,06,06,06,06,06,01,01,01,01,01,01,01,07,07, 9, 9, 9, 9, 9,07,07, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,06},
            {06,05,05,05,05,05,05,05,06,06,06,07,07,07,07,07,07,07,07,07,07,01,01,01,01,01,01,01,07,07,07,07,07,07,07,07,07, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,06},
            {06,05,05,05,05,05,05,05,06,06,06,07,07,07,07,07,07,07,07,07,07,01,01,01,01,01,01,01,07,07,07,07,07,07,07,07,07, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,06},
            {06,05,05,05,05,05,06,06,06,06,06,07,07,06,06,06,06,06,06,06,06,01,01,01,01,01,01,01,07,07, 9, 9, 9, 9, 9,07,07, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,06},
            {06,06,05,05,05,06,06,06,06,06,06,07,07,06,06,06,06,06,06,06,06,06,03,03,03,03,03,03,06,06, 9, 9, 9, 9, 9,07,07, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,06},
            {06,06,06,06,06,06,07,07,07,07,07,07,07,06,06,06,06,06,06,06,06,06,06,03,03,03,03,03,06,06, 9, 9, 9, 9, 9,07,07, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,06},
            {06,06,06,06,06,06,07,07,07,07,07,07,07,06,06,06,06,06,06,06,06,06,06,03,03,03,03,03,06,06, 9, 9, 9, 9, 9,07,07, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,06},
            {06,06,06,06,06,06,07,07,06,06,06,06,06,06,06,06,06,07,07,07,07,07,06,03,03,03,03,03,06,06, 9, 9, 9,07,07,07,07,07,07,07,07,07, 9, 9, 9, 9, 9,06},
            {06,06,06,06,06,06,07,07,06,06,06,06,06,06,06,06,06,07,07,07,07,07,06,03,03,03,03,03,06,06, 9, 9, 9,07,07,07,07,07,07,07,07,07, 9, 9, 9, 9, 9,06},
            {06,06,06,06,06,06,07,07,06, 8, 8, 8, 8, 8,06,06,06,07,07,07,07,07,06,06,03,03,03,03,03,06, 9, 9, 9,07,07, 9, 9, 9, 9, 9,07,07, 9, 9, 9, 9, 9,06},
            {06,06,06,06,06,06,07,07,06, 8, 8, 8, 8, 8,06,06,06,07,07,07,07,07,06,06,03,03,03,03,03,06, 9, 9, 9,07,07, 9, 9, 9, 9, 9,07,07, 9, 9, 9, 9, 9,06},
            {07,07,07,07,07,07,07,07,06, 8, 8, 8, 8, 8,06,06,06,07,07,07,07,07,06,06,03,03,03,03,03,06, 9, 9, 9,07,07, 9, 9, 9, 9, 9,07,07, 9, 9, 9, 9, 9,06},
            {07,07,07,07,07,07,07,07,06, 8, 8, 8, 8, 8,06,06,06,07,07,07,07,07,06,06,03,03,03,03,03,06, 9, 9, 9,07,07, 9, 9, 9, 9, 9,07,07, 9, 9, 9, 9, 9,06},
            {10,10,10,10,10,10,07,07,06, 8, 8, 8, 8, 8,06,06,06,06,06,06,06,06,06,06,03,03,03,03,03,06, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,07,07,07,07,07,07, 9,06},
            {10,10,10,10,10,10,07,07,06, 8, 8, 8, 8, 8,06,06,06,06,06,06,06,06,06,06,03,03,03,03,03,06, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,07,07,07,07,07,07, 9,06},
            {10,10,10,10,10,10,07,07,06,06,06,06,06,06,06,06,06,06,06,06,06,06,06,03,03,03,03,03,03,06, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,07,07, 9, 9, 9, 9, 9,06},
            {10,10,10,10,10,10,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,06,06,03,03,03,03,03,03,06, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,07,07, 9, 9, 9, 9, 9,06},
            {10,10,10,10,10,10,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,06,06,03,03,03,03,03,06,06, 9, 9,07,07,07,07,07,07,07,07,07,07, 9, 9, 9, 9, 9,06},
            {10,10,10,10,10,10,07,07,06,06,06,06,06,06,06,06,06,06,06,07,07,06,06,03,03,03,03,03,06,06, 9, 9,07,07,07,07,07,07,07,07,07,07, 9, 9, 9, 9, 9,06},
            {10,10,10,10,10,10,07,07,06, 9, 9, 9, 9, 9, 9, 9, 9, 9,06,07,07,06,06,03,03,03,03,03,06,06, 9, 9, 9, 9, 9, 9, 9,07,07, 9, 9, 9, 9, 9, 9, 9, 9,06},
            {10,10,10,10,10,10,07,07,06, 9, 9, 9, 9, 9, 9, 9, 9, 9,06,07,07,06,06,03,03,03,03,03,06,06, 9, 9, 9, 9, 9, 9, 9,07,07, 9, 9, 9, 9, 9, 9, 9, 9,06},
            {10,10,10,10,10,10,07,07,06, 9, 9, 9, 9, 9, 9, 9, 9, 9,06,07,07,06,06,03,03,03,03,03,03,06, 9, 9, 9, 9, 9, 9, 9,07,07, 9, 9, 9, 9, 9, 9, 9, 9,06}
    };



    public Terrain() {

    }

    public int[][] getCodesTuiles() {
        return codesTuiles;
    }

    public int getLongueur() {
        return codesTuiles[0].length;
    }

    public int getHauteur() {
        return codesTuiles.length;
    }

    public int getCodeTuile(int x, int y) {
        if (x < 0 || x >= codesTuiles.length || y < 0 || y >= codesTuiles[0].length) {
            return -1; // Code de tuile invalide pour les positions hors du tableau.
        }
        return codesTuiles[x][y];
    }

    public boolean estAutorisee(double x, double y) {
        return getCodeTuile((int) x,(int) y) != 3; // Supposons que la tuile avec le code 3 n'est pas autorisÃ©e.
    }

//    public boolean estAutorisee(double x, double y) {
//        if (codesTuiles[(int)((y)/32)][(int)((x)/32)] == 3) {
//            System.out.println("impossible");
//            return false;
//        } else if (x >= 0 && x < getLongueur() * 32 && y >= 0 && y < getHauteur() * 32) {
//            return true;
//        }
//        return false;
//    }
}
